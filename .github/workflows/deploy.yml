name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        
    - name: Enable Corepack
      run: corepack enable
        
    - name: Install dependencies
      run: |
        corepack yarn install
        cd frontend && corepack yarn install
        cd ../backend && corepack yarn install
        
    - name: Run backend tests
      run: |
        cd backend
        corepack yarn test
        
    - name: Run frontend tests
      run: |
        cd frontend
        corepack yarn test --coverage --passWithNoTests
        
    - name: Build backend
      run: |
        cd backend
        corepack yarn build
        
    - name: Build frontend
      run: |
        cd frontend
        REACT_APP_API_URL=/api corepack yarn build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        
    - name: Enable Corepack
      run: corepack enable
        
    - name: Install Vercel CLI
      run: npm install -g vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Project Artifacts
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
